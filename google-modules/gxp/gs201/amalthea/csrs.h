/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Amalthea CSR definitions.
 *
 * Copyright (C) 2021-2022 Google LLC
 */

#ifndef __AMALTHEA_CSRS_H__
#define __AMALTHEA_CSRS_H__

#include <linux/bits.h>

enum gxp_csrs {
	GXP_REG_LPM_VERSION = 0x40000,
	GXP_REG_AURORA_REVISION = 0x80000,
	GXP_REG_COMMON_INT_POL_0 = 0x81000,
	GXP_REG_COMMON_INT_POL_1 = 0x81004,
	GXP_REG_DEDICATED_INT_POL = 0x81008,
	GXP_REG_RAW_EXT_INT = 0x82000,
	GXP_REG_CORE_PD_0 = 0x82800,
	GXP_REG_GLOBAL_COUNTER_LOW = 0x83000,
	GXP_REG_GLOBAL_COUNTER_HIGH = 0x83004,
	GXP_REG_WDOG_CONTROL = 0x86000,
	GXP_REG_WDOG_VALUE = 0x86008,
	GXP_REG_TIMER_0 = 0x90000,
	GXP_REG_DOORBELL_0 = 0xC0000,
	GXP_REG_SYNC_BARRIER_0 = 0x100000,
	GXP_REG_CORE_0 = 0x200000,
};

#define GXP_REG_ETM_PWRCTL_CORE_RESET_SHIFT	16

/* helpers for calculating core CSRs offsets */
#define GXP_REG_CORE_CSR(core, off) (GXP_REG_CORE_0 + 0x10000 * (core) + (off))

/* Per core CSRs. @core should be in region 0 ~ GXP_NUM_CORES-1 */
#define GXP_REG_CORE_INST_BPM(core) GXP_REG_CORE_CSR(core, 0x0)
#define GXP_REG_CORE_PROFILING_CONDITION(core) GXP_REG_CORE_CSR(core, 0x4000)
#define GXP_REG_CORE_PROCESSOR_ID(core) GXP_REG_CORE_CSR(core, 0x4004)
#define GXP_REG_CORE_ALT_RESET_VECTOR(core) GXP_REG_CORE_CSR(core, 0x4008)
#define GXP_REG_CORE_COMMON_INT_MASK_0(core) GXP_REG_CORE_CSR(core, 0x4010)
#define GXP_REG_CORE_COMMON_INT_MASK_1(core) GXP_REG_CORE_CSR(core, 0x4014)
#define GXP_REG_CORE_DEDICATED_INT_MASK(core) GXP_REG_CORE_CSR(core, 0x401C)
#define GXP_REG_CORE_ETM_PWRCTL(core) GXP_REG_CORE_CSR(core, 0xB020)

#define GXP_REG_CORE_PD(i) (GXP_REG_CORE_PD_0 + 0x4 * (i))

#define GXP_REG_TIMER_COUNT 8
#define GXP_REG_TIMER_BASE(i) (GXP_REG_TIMER_0 + 0x1000 * (i))
#define GXP_REG_TIMER_COMPARATOR(i) (GXP_REG_TIMER_BASE(i) + 0x0)
#define GXP_REG_TIMER_CONTROL(i) (GXP_REG_TIMER_BASE(i) + 0x4)
#define GXP_REG_TIMER_VALUE(i) (GXP_REG_TIMER_BASE(i) + 0x8)

#define GXP_REG_DOORBELL_SET_WRITEMASK 0x1
#define GXP_REG_DOORBELL_CLEAR_WRITEMASK 0x1
#define GXP_REG_DOORBELL_BASE(i) (GXP_REG_DOORBELL_0 + 0x1000 * (i))
#define GXP_REG_DOORBELL_STATUS(i) (GXP_REG_DOORBELL_BASE(i) + 0x0)
#define GXP_REG_DOORBELL_SET(i) (GXP_REG_DOORBELL_BASE(i) + 0x4)
#define GXP_REG_DOORBELL_CLEAR(i) (GXP_REG_DOORBELL_BASE(i) + 0x8)

#define GXP_REG_SYNC_BARRIER_SHADOW(i) (GXP_REG_SYNC_BARRIER_0 + 0x1000 * (i) + 0x800)

/* CMU offset */
#define PLL_CON0_PLL_AUR 0x100
#define PLL_CON0_NOC_USER 0x610

/* Provino fabric CSR offsets and fields */
#define FABRIC_IXBAR1_ARL_CTRL_OFFSET 0x1818
#define FABRIC_IXBAR1_ARL_CTRL_EN BIT(31)

#endif /* __AMALTHEA_CSRS_H__ */
